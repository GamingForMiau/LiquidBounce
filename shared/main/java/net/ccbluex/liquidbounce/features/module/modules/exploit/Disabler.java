/*
 * LiquidBounce Hacked Client
 * A free open source mixin-based injection hacked client for Minecraft using Minecraft Forge.
 * https://github.com/CCBlueX/LiquidBounce/
 */
package net.ccbluex.liquidbounce.features.module.modules.exploit;

import net.ccbluex.liquidbounce.api.minecraft.network.IPacket;
import net.ccbluex.liquidbounce.api.minecraft.network.play.client.ICPacketPlayer;
import net.ccbluex.liquidbounce.event.EventTarget;
import net.ccbluex.liquidbounce.event.PacketEvent;
import net.ccbluex.liquidbounce.event.UpdateEvent;
import net.ccbluex.liquidbounce.features.module.Module;
import net.ccbluex.liquidbounce.features.module.ModuleCategory;
import net.ccbluex.liquidbounce.features.module.ModuleInfo;
import net.ccbluex.liquidbounce.value.BoolValue;
import net.ccbluex.liquidbounce.value.ListValue;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.client.C0CPacketInput;
import net.minecraft.network.play.server.S00PacketKeepAlive;

@ModuleInfo(name = "Disabler", description = "Allows you to disable some anticheats/anticheat checks.", category = ModuleCategory.EXPLOIT)
public class Disabler extends Module {

    private final ListValue modeValue = new ListValue("Mode", new String[] {"C00KeepAlive", "S00KeepAlive", "C0CPacketInput", "MineplexCombat"}, "C00KeepAlive");


    public final BoolValue packetPlayerOnGroundFalseValue = new BoolValue("LastCrap", false);

    @EventTarget
    public void onUpdate(final UpdateEvent event) {
            switch (modeValue.get().toLowerCase()) {
                case "mineplexcombat":
                    if (!mc.getThePlayer().isDead()) {
                        mc.getNetHandler().addToSendQueue(classProvider.createCPacketKeepAlive());
                    }
                    break;
            }
    }

    @EventTarget
    public void onPacket(final PacketEvent event) {
        final IPacket packet = event.getPacket();

        if (classProvider.isCPacketPlayer(packet)) {
            final ICPacketPlayer packetPlayer = packet.asCPacketPlayer();

            switch (modeValue.get().toLowerCase()) {
                case "c00keepalive":
                    if (packet instanceof C00PacketKeepAlive) {
                        event.cancelEvent();
                    }
                    break;
                case "s00keepalive":
                    if (packet instanceof S00PacketKeepAlive) {
                        event.cancelEvent();
                    }
                    break;
                case "c0cpacketinput":
                    if (packet instanceof C0CPacketInput) {
                        event.cancelEvent();
                    }
                    break;
            }
            if(packetPlayerOnGroundFalseValue.get()) {
                packetPlayer.setOnGround(false);
            }
        }
    }
}
